{"version":3,"sources":["components/actions/NavTag.js","components/constants/ActionTypes.js","components/lib/NavTag.jsx","components/lib/base/Search.js","components/lib/base/Delete.jsx","components/lib/ChatList.jsx","components/lib/NavState.jsx","components/lib/ContactsList.jsx","components/lib/Setting.jsx","components/lib/Friends.jsx","components/lib/base/LineCose.js","components/lib/EntryCommunication.jsx","components/lib/ChatMain.jsx","components/lib/App.jsx","components/serviceWorker.js","components/reducers/Update.js","index.js"],"names":["ShowScreen","bool","type","value","PositionCurrent","posX","currentIndex","ChatMainPos","left","RouterLeft","x","is","leftSkewing","isTransit","url","NavTag","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nav","icon","name","_this2","react_default","a","createElement","className","style","zIndex","opacity","row","gutter","justify","map","item","index","col","key","span","onTouchEnd","swiper","bind","getIndex","fontSize","path","dispatch","NavIndex","text","history","push","Component","defaultProps","connect","current","forEach","window","location","pathname","Search","input","SearchWechat","placeholder","onSearch","console","log","width","margin","DeleteWechat","handlDelete","ChatList","clientWidth","right","data","title","id","base_Search","length","react_hammerjs_es","onPanEnd","onLeft","options","direction","es_list","Item","Meta","avatar","src","description","onClick","onTap","base_Delete","display","setState","e","Initialization","arr","assign","additionalEvent","deltaX","deltaTime","$","btoa","unescape","encodeURIComponent","_this3","removeHandle","setTimeout","splice","getState","NavState","back","ContactsList","Setting","Friends","LineCose","_ref","opting","message","concat","color","data-type","target","img","alt","IconFont","createFromIconfontCN","scriptUrl","EntryCommunication","onPressEnter","keySend","onChange","onChangeValue","ref","node","propsTypes","PropsTypes","func","isRequired","ChatMain","scale","isHandelMove","list","isBack","preventDefault","center","velocityX","Math","ceil","toFixed","transform","onPanStart","handelStart","onPan","sign","handelEnd","LineCose_LineCose","content","EntryCommunication_EntryCommunication","getInfo","_this4","refs","sendMessage","replace","emitEmpty","ok","objectSpread","animate","scrollTop","scrollHeight","clientHeight","customHistory","createBrowserHistory","App","lib_NavState","isScreen","Router","Switch","Route","exact","component","lib_ChatMain","lib_NavTag","Boolean","hostname","match","initialState","initState","store","createStore","arguments","undefined","action","ReactDOM","render","es","lib_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abbf8cb4.chunk.js","sourcesContent":["import * as types from '../constants/ActionTypes'\r\n\r\nexport const NavIndex = index => {\r\n    return {\r\n        type: types.UPDATE_INDEX,\r\n        index: index\r\n    }\r\n};\r\n\r\nexport const FixedPage = Text => {\r\n    return {\r\n        type: types.FETCH_NAME,\r\n        text: Text\r\n    }\r\n};\r\n\r\nexport const ShowScreen = bool => {\r\n    return {\r\n        type: types.SCREEN_SHOW,\r\n        value: bool\r\n    }\r\n};\r\n\r\nexport const PositionCurrent = posX => {\r\n    return {\r\n        type: types.POS_CURRENT,\r\n        currentIndex: posX\r\n    }\r\n};\r\n\r\nexport const ChatMainPos = posX => {\r\n    return {\r\n        type: types.CHAT_MAIN_POS,\r\n        left: posX\r\n    }\r\n};\r\n\r\nexport const RouterLeft = (x, is) => {\r\n    return {\r\n        type: types.ROUTER_LEFT,\r\n        leftSkewing: x,\r\n        isTransit: is\r\n    }\r\n};","export const UPDATE_INDEX = 'UPDATE_INDEX';\r\nexport const FETCH_NAME = 'FETCH_NAME';\r\nexport const SCREEN_SHOW = 'SCREEN_SHOW';\r\nexport const POS_CURRENT = 'POS_CURRENT';\r\nexport const CHAT_MAIN_POS = 'CHAT_MAIN_POS';\r\nexport const ROUTER_LEFT = 'ROUTER_LEFT';\r\n","import React, { Component } from 'react';\r\nimport '../style/NavTag.sass'\r\nimport {Icon, Row, Col } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { NavIndex, FixedPage } from '../actions/NavTag'\r\nimport PropTypes from 'prop-types'\r\n\r\nlet url = ['/', '/contacts', '/friends', '/setting'];\r\nclass NavTag extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nav: [{\r\n                url: '/',\r\n                icon: 'aliwangwang',\r\n                name: '微信'\r\n            },{\r\n                url: '/contacts',\r\n                icon: 'team',\r\n                name: '通讯录'\r\n            },{\r\n                url: '/friends',\r\n                icon: 'chrome',\r\n                name: '朋友圈'\r\n            },{\r\n                url: '/setting',\r\n                icon: 'user',\r\n                name: '设置'\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`NavTag`} style={{zIndex: this.props.zIndex, opacity: this.props.opacity}}>\r\n                <Row gutter={8} justify=\"space-between\">\r\n                    {this.state.nav.map((item, index)=>{\r\n                        return (\r\n                            <Col key={index} span={6} onTouchEnd={this.swiper.bind(this, index, item.name, item.url)} className={this.props.getIndex() === index ? 'focus' : 'burl'}>\r\n                                <Icon type={item.icon} style={{'fontSize': '18px'}} />\r\n                                <p>{item.name}</p>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    swiper(index, name, path) {\r\n        this.props.dispatch(NavIndex(index));\r\n        this.props.dispatch(FixedPage(name));\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n}\r\n\r\n\r\nfunction connectState(state) {\r\n    return {\r\n        getIndex() {\r\n            let current = 0;\r\n            if (!state) {\r\n                url.forEach((item, index)=>{\r\n                    if (item === window.location.pathname) {\r\n                        current = index\r\n                    }\r\n                });\r\n            }\r\n\r\n            return state ? state.index : current\r\n        }\r\n    }\r\n}\r\n\r\nNavTag.propTypes = {\r\n    zIndex: PropTypes.number\r\n};\r\nNavTag.defaultProps = {\r\n    zIndex: 2,\r\n    opacity: 1\r\n};\r\n\r\nexport default connect(\r\n    connectState\r\n)(NavTag)\r\n","import { Input } from 'antd';\r\nimport React from \"react\";\r\n\r\nconst Search = Input.Search;\r\n\r\nconst SearchWechat = () => (\r\n    <Search\r\n        placeholder=\"搜索\"\r\n        onSearch={value => console.log(value)}\r\n        style={{ width: '90%', margin: '0.6rem 0' }}\r\n    />\r\n);\r\n\r\nexport default SearchWechat;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style/base/Delete.sass'\r\n\r\nclass DeleteWechat extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"delete-wechat\"  onTouchEnd={this.props.handlDelete}>\r\n                删除\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteWechat.propTypes = {\r\n    handlDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DeleteWechat;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {ShowScreen, PositionCurrent, ChatMainPos, RouterLeft} from '../actions/NavTag'\r\nimport '../style/ChatList.sass'\r\nimport SearchWechat from './base/Search'\r\nimport Hammer from 'react-hammerjs'\r\nimport Delete from './base/Delete'\r\nimport { Icon, List, Avatar } from 'antd'\r\nimport $ from 'jquery'\r\n\r\nclass ChatList extends Component{\r\n    deltaTime;\r\n    additionalEvent;\r\n    constructor(props) {\r\n        super(props);\r\n        this.clientWidth = 0;\r\n        this.state = {\r\n            right: [],\r\n            data: [\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n                {title: 'Ant Design Title 1',id: 0, type: 'normal'},\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className={`ChatList`}>\r\n                <SearchWechat />\r\n                {this.state.data.length !== 0 && <div className=\"swiper-box\">\r\n                    {this.state.data.map((item,index)=>{\r\n                        return (\r\n                            <Hammer\r\n                                onPanEnd={this.onLeft.bind(this, index)}\r\n                                options={{\r\n                                    direction: ['DIRECTION_LEFT', 'DIRECTION_RIGHT'],\r\n                                }}\r\n                                key={index}\r\n                            >\r\n                                <div className=\"swiper-item\">\r\n                                    <List.Item style={{left: this.state.right[index]}}>\r\n                                        <List.Item.Meta\r\n                                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                            title={item.title}\r\n                                            description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n                                            onClick={this.onTap.bind(this, item.id, item.type)}\r\n                                        />\r\n                                        <Delete handlDelete={ChatList.handlDelete.bind(this, index)} />\r\n                                    </List.Item>\r\n                                </div>\r\n                            </Hammer>\r\n                        )\r\n                    })}\r\n                </div>}\r\n                {this.state.data.length === 0 && <div className=\"info-content\"><Icon type=\"frown\" style={{fontSize: 32, display: 'block', margin: '0 0 1rem'}} />暂时没有新信息</div>}\r\n            </div>\r\n        )\r\n    }\r\n    clearAll() {\r\n        this.setState({\r\n            data: [],\r\n        })\r\n    }\r\n    onLeft(index, e) {\r\n        this.Initialization();\r\n        let arr = Object.assign([], this.state.right);\r\n        if (e.additionalEvent === 'panleft') {\r\n            if (-e.deltaX >= 100 || e.deltaTime <= 150) {\r\n                arr[index] = -100\r\n            } else {\r\n                arr[index] = 0\r\n            }\r\n        } else {\r\n            if (e.deltaX >= 100 || e.deltaTime <= 150) {\r\n                arr[index] = 0\r\n            } else {\r\n                arr[index] = -100\r\n            }\r\n        }\r\n        this.setState({\r\n            right: arr,\r\n        });\r\n    }\r\n    Initialization() {\r\n        let arr = Object.assign([], this.state.right);\r\n        arr = arr.map(()=>{return 0});\r\n        this.setState({\r\n            right: arr,\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.clientWidth = $('.ChatList')[0].clientWidth;\r\n    }\r\n    onTap(id, type) {\r\n        this.Initialization();\r\n        // if (type === 'normal') this.props.history.push(`/chatInterface/${ChatList.enCode(id + '+link')}`);\r\n        this.props.dispatch(ShowScreen(true));\r\n        this.props.dispatch(PositionCurrent(1));\r\n        this.props.dispatch(ChatMainPos(0));\r\n        console.log(-(this.clientWidth - 100))\r\n        this.props.dispatch(RouterLeft(-(this.clientWidth - 100), true));\r\n    }\r\n    static enCode(value) {\r\n        return window.btoa(unescape(encodeURIComponent(value)));\r\n    }\r\n    static handlDelete(index) {\r\n        // 移除之前的回调\r\n        this.removeHandle(index);\r\n        setTimeout(()=>{\r\n            let data = Object.assign([], this.state.data);\r\n            let right = Object.assign([], this.state.right);\r\n            data.splice(index, 1);\r\n            right.splice(index, 1);\r\n            this.setState({\r\n                data: data,\r\n                right: right\r\n            });\r\n        }, 400);\r\n\r\n        console.log(index)\r\n    }\r\n    removeHandle(index) {\r\n        let arr = Object.assign([], this.state.right);\r\n        arr[index] = '-140%';\r\n        this.setState({\r\n            right: arr\r\n        });\r\n    }\r\n}\r\n\r\nfunction connectState(state) {\r\n    return {\r\n        getState() {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    connectState\r\n)(ChatList)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Icon } from 'antd'\r\nimport '../style/NavState.sass'\r\nimport {ChatMainPos, PositionCurrent, RouterLeft, ShowScreen} from \"../actions/NavTag\";\r\n\r\nclass NavState extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"NavState\">\r\n                {this.props.getState().value && <div className=\"back\"  style={{opacity: this.props.getState().currentIndex}} onTouchEnd={this.back.bind(this)}>\r\n                    <Icon type=\"left\" style={{fontSize: 16}} />\r\n                    返回\r\n                </div>}\r\n                <h1>{this.props.getState().text}</h1>\r\n            </div>\r\n        )\r\n    }\r\n    back() {\r\n        this.props.history.push(`/`);\r\n        this.props.dispatch(ShowScreen(false));\r\n        this.props.dispatch(PositionCurrent(1));\r\n        this.props.dispatch(ChatMainPos('110%'));\r\n        this.props.dispatch(RouterLeft(0, true));\r\n    }\r\n}\r\n\r\nfunction connectState(state) {\r\n    return {\r\n        getState() {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    connectState\r\n)(NavState)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ContactsList extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"ContactsList\">\r\n                ContactsList\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n\r\n)(ContactsList)\r\n","import React, { Component } from 'react';\r\nimport '../style/Friends.sass'\r\n\r\nclass Setting extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"Setting\">Setting</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Setting\r\n","import React, { Component } from 'react';\r\nimport '../style/Friends.sass'\r\n\r\nclass Friends extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"Friends\">Friends</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friends\r\n","import React from 'react';\r\nimport PropeTypes from 'prop-types'\r\nimport '../../style/base/LineCose.sass'\r\n\r\nexport const LineCose = ({opting, message}) => {\r\n    return (\r\n        <div className={`LineCose ${opting.type} ${opting.color}`} data-type={opting.target}>\r\n            {/*<time>{opting.time}</time>*/}\r\n            <img src={opting.img} alt=\"Not Found\"/>\r\n            <p data-type={opting.target}>{message}</p>\r\n        </div>\r\n    )\r\n};\r\nLineCose.propTypes = {\r\n    opting: PropeTypes.object,\r\n    message: PropeTypes.string\r\n};\r\nLineCose.defaultProps = {\r\n    opting: {\r\n        target: 1,\r\n        type: 'normal',\r\n        color: 'green',\r\n        img: 'http://newimg88.b0.upaiyun.com/newimg88/2009/05/feiwen8772qqcom_2da5419d.jpg'\r\n    }\r\n};\r\n","import React , { Component } from 'react';\r\nimport PropsTypes from 'prop-types'\r\nimport '../style/EntryCommunication.sass';\r\n\r\nimport { Icon, Input  } from \"antd\";\r\nconst IconFont = Icon.createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_836575_gxdpqhmux69.js',\r\n});\r\n\r\nexport default class EntryCommunication extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            value: ''\r\n        }\r\n    }\r\n    render() {\r\n        const { value } = this.state;\r\n        return (\r\n            <div className=\"EntryCommunication\">\r\n                <IconFont type=\"icon-keyboard\" />\r\n                <Input\r\n                    onPressEnter={this.props.keySend}\r\n                    onChange={this.onChangeValue.bind(this)}\r\n                    ref={node => this.input = node}\r\n                    value={value} />\r\n                <IconFont type=\"icon-jiahao-fill\" />\r\n            </div>\r\n        )\r\n    }\r\n    onChangeValue (e) {\r\n        this.setState({ value: e.target.value });\r\n    }\r\n    emitEmpty() {\r\n        this.setState({ value: '' });\r\n    }\r\n}\r\n\r\nEntryCommunication.propsTypes = {\r\n    keySend: PropsTypes.func.isRequired\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../style/ChatMain.sass';\r\n// import { callApi } from '../http/fetch'\r\n// import {FixedPage} from \"../actions/NavTag\";\r\nimport Hammer from 'react-hammerjs'\r\nimport { LineCose } from \"./base/LineCose\";\r\nimport EntryCommunication from './EntryCommunication';\r\nimport $ from 'jquery'\r\nimport {ShowScreen, PositionCurrent, ChatMainPos, RouterLeft} from \"../actions/NavTag\";\r\n\r\nclass ChatMain extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.scale = 1;\r\n        this.isHandelMove = false;\r\n        this.state = {\r\n            id: -1,\r\n            list: [],\r\n            left: 0,\r\n            isTransit: false,\r\n            isBack: false,\r\n            clientWidth: 0\r\n        }\r\n    }\r\n    handelStart(e) {\r\n        e.preventDefault();\r\n        e.center.x > this.state.clientWidth / 2 ? this.isHandelMove = false : this.isHandelMove = true\r\n    }\r\n    sign(e) {\r\n        e.preventDefault();\r\n        // console.log(e.velocityX)\r\n        if (!this.isHandelMove) {\r\n            return false;\r\n        }\r\n        if (e.velocityX >= 0.1 || e.deltaX >= 0) {\r\n            this.setState({\r\n                left: e.deltaX,\r\n                isTransit: false\r\n            })\r\n        }\r\n        if (this.state.left > 130) {\r\n            this.setState({\r\n                isBack: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isBack: false\r\n            })\r\n        }\r\n        this.props.dispatch(RouterLeft(Math.ceil(this.state.left * 0.7 - 230), false ));\r\n        setTimeout(() => {\r\n            this.scale = 1 - (this.state.left / this.state.clientWidth).toFixed(1);\r\n            this.props.dispatch(PositionCurrent(this.scale));\r\n        }, 0);\r\n    }\r\n    handelEnd(e) {\r\n        e.preventDefault();\r\n        if (this.state.isBack) {\r\n            this.setState({\r\n                left: this.state.clientWidth,\r\n                isTransit: true\r\n            });\r\n            this.props.dispatch(RouterLeft(0, true));\r\n            setTimeout(() => {\r\n                // 动画完成改变状态\r\n                this.props.dispatch(ShowScreen(false));\r\n                this.props.dispatch(PositionCurrent(1));\r\n                this.props.dispatch(ChatMainPos('110%'));\r\n                this.setState({\r\n                    left: 0,\r\n                    isTransit: false\r\n                })\r\n            }, 100);\r\n            return true;\r\n        }\r\n        this.setState({\r\n            left: 0,\r\n            isTransit: true\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`ChatMain ${this.state.isTransit && 'transit'}`} style={{transform: `translateX(${this.state.left}px)`, left: this.props.getState().left}}>\r\n                <Hammer\r\n                    onPanStart={this.handelStart.bind(this)}\r\n                    onPan={this.sign.bind(this)}\r\n                    onPanEnd={this.handelEnd.bind(this)}\r\n                    options={{\r\n                        direction: ['DIRECTION_LEFT', 'DIRECTION_RIGHT'],\r\n                    }}\r\n                >\r\n                    <div className=\"ChatContent\">\r\n                        {this.state.list.map((item, index)=>{\r\n                            return (\r\n                                <LineCose\r\n                                    key={index}\r\n                                    opting={{\r\n                                        target: item.target,\r\n                                        type: item.type,\r\n                                        color: 'blue',\r\n                                        img: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\r\n                                    }}\r\n                                    message={item.content}\r\n                                />\r\n                            )\r\n                        })}\r\n                        <EntryCommunication keySend={this.getInfo.bind(this)} ref=\"message\" />\r\n                    </div>\r\n                </Hammer>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // 获取屏幕宽度\r\n        this.setState({\r\n            clientWidth: $('.ChatMain')[0].clientWidth\r\n        });\r\n        // let id = decodeURIComponent(escape(window.atob(this.props.match.params.id))).replace(/\\+link$/g, '');\r\n        // this.jsonLoad(id);\r\n    }\r\n    async jsonLoad (id) {\r\n        // let { json } = await callApi(`http://172.16.1.69:7300/mock/5bf60e808639da0a80f7938b/chatListAll?id=${id}`);\r\n        // this.setState({\r\n        //     id: json.data.id,\r\n        //     list: json.data.list\r\n        // });\r\n        // this.props.dispatch(FixedPage(json.data.name));\r\n        // console.log(json);\r\n    }\r\n    getInfo() {\r\n        if (this.refs.message.state.value === '') return false;\r\n        this.sendMessage(this.refs.message.state.value.replace(/\\s/g, '\\u00a0'));\r\n        // this.refs.message.emitEmpty();\r\n        setTimeout(()=>{\r\n            this.refs.message.emitEmpty(); // 延迟 清空回车 \\n\r\n        }, 0)\r\n    }\r\n    async sendMessage (message) {\r\n        // let { json } = await callApi(`localhost:8000/message?m=${message}`);\r\n        /**\r\n         * 模拟\r\n         */\r\n        let json = {ok: 200};\r\n        if (json.ok === 200) {\r\n            let list = this.state.list.concat();\r\n            list.push({\r\n                target: 0,\r\n                type: 'normal',\r\n                content: message\r\n            });\r\n            this.setState({\r\n                ...this.state,\r\n                list\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        let node = $('.ChatContent');\r\n        node.animate({scrollTop: node[0].scrollHeight - node[0].clientHeight} , 200);\r\n    }\r\n}\r\n\r\nfunction connectState(state) {\r\n    return {\r\n        getState() {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    connectState\r\n)(ChatMain)\r\n","import React, { Component } from 'react';\r\nimport { Router, Route, Switch} from 'react-router'\r\nimport createBrowserHistory from \"history/createBrowserHistory\";\r\nimport { connect } from 'react-redux';\r\nimport '../style/App.css';\r\n\r\n/**\r\n * 视图UI入口\r\n * wechat组件化 , 细分达到低耦合\r\n */\r\nimport NavTag from './NavTag'\r\nimport ChatList from './ChatList'\r\nimport NavState from './NavState'\r\nimport ContactsList from './ContactsList'\r\nimport Setting from './Setting'\r\nimport Friends from './Friends'\r\nimport ChatMain from './ChatMain'\r\nconst customHistory = createBrowserHistory();\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <NavState history={customHistory} />\r\n                <div className={`MainContent  ${this.props.isScreen().value ? 'hidden' : 'show'} ${this.props.isScreen().isTransit && 'ContentTransit'}`} style={{transform: `translateX(${this.props.isScreen().leftSkewing}px)`}}>\r\n                    <Router history={customHistory}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={ChatList}/>\r\n                            <Route path=\"/contacts\" component={ContactsList}/>\r\n                            <Route path=\"/friends\" component={Friends}/>\r\n                            <Route path=\"/setting\" component={Setting}/>\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n                <ChatMain />\r\n                <NavTag history={customHistory} zIndex={this.props.isScreen().value ? 1 : 2} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isScreen() {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n    index: 0,\r\n    text: '微信',\r\n    value: false,\r\n    currentIndex: 1,\r\n    left: '110%',\r\n    leftSkewing: 0,\r\n    isTransit: true\r\n};\r\nlet initState = ['微信','通讯录'];\r\nexport const UpdateNav = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_INDEX:\r\n            return {\r\n                ...state,\r\n                index: action.index\r\n            };\r\n        case types.FETCH_NAME:\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            };\r\n        case types.SCREEN_SHOW:\r\n            return {\r\n                ...state,\r\n                value: action.value,\r\n                text: initState[state.index]\r\n            };\r\n        case types.POS_CURRENT:\r\n            return {\r\n                ...state,\r\n                currentIndex: action.currentIndex\r\n            };\r\n        case types.CHAT_MAIN_POS:\r\n            return {\r\n                ...state,\r\n                left: action.left\r\n            };\r\n        case types.ROUTER_LEFT:\r\n            return {\r\n                ...state,\r\n                leftSkewing: action.leftSkewing,\r\n                isTransit: action.isTransit\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './components/style/index.css';\r\nimport App from './components/lib/App';\r\nimport * as serviceWorker from './components/serviceWorker';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport { UpdateNav } from './components/reducers/Update'\r\n\r\nconst store = createStore(UpdateNav);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}